@charset "utf-8";

:root {
    --bg: #EEF1F7;
    --fSize: 7.5vmin;

    --bdr: min(12px, 2vmin);

    --grid-bg: rgb(218, 222, 233);
    --cell-bg: rgb(168, 174, 191);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

@font-face {
    font-family: 'MaplestoryOTFBold';
    src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@2.1/MaplestoryOTFBold.woff') format('woff');
    font-weight: normal;
    font-style: normal;
}

html,
body {
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
    gap: 3vmin;
    width: 100%;
    min-height: 100vh;
    background: var(--bg);
    font-family: 'MaplestoryOTFBold';
    font-size: var(--fSize);
}

h1 {
    font-size: 3vmin;
}

.container {
    display: grid;
    width: 100;
    height: 100%;
    grid-template-areas: "title upgrade"
        "score upgrade"
        "board upgrade";
    grid-template-columns: 2fr 1fr;
    grid-template-rows: 0.1 0.1 1fr;
}

.title {
    grid-area: Title;
    text-align: left;
    font-size: 7vmin;
    background: linear-gradient(to bottom, #B1AFFF, #c2c0ff);
    color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
}

.title-upper {
    font-size: 4vmin;
    background: linear-gradient(to top, #B1AFFF, #c2c0ff);
    color: transparent;
    -webkit-background-clip: text;
    background-clip: text;
}

#Score {
    color: hsl(200, 25%, 50%);
    grid-area: score;
    vertical-align: middle;
}

.upgrade {
    grid-area: upgrade;
}

#game-board {
    /* --grid-size:4;
    --cell-size:15vmin;
    --cell-gap:1.5vmin; */
    display: grid;
    overflow: hidden;
    grid-template-columns: repeat(var(--grid-size), var(--cell-size));
    grid-template-rows: repeat(var(--grid-size), var(--cell-size));
    grid-gap: var(--cell-gap);
    position: relative;
    padding: var(--cell-gap);
    background-color: var(--grid-bg);
    border-radius: var(--bdr);
    grid-area: board;
}

.cell {
    background: var(--cell-bg);
    border-radius: var(--bdr);
}

.tile {
    position: absolute;
    width: var(--cell-size);
    aspect-ratio: 1/1;
    border-radius: var(--bdr);
    text-align: center;
    line-height: var(--cell-size);
    font-weight: bold;
    left: calc(var(--x) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
    top: calc(var(--y) * (var(--cell-size) + var(--cell-gap)) + var(--cell-gap));
    background: #F6F6F6;
    color: hsl(200, 25%, var(--cell-text-lightness));
    animation: show 200ms ease-in-out;
    transition: 100ms ease-in-out;
    /* box-shadow: 2px 2px 0 rgba(0, 0, 0, .2); */
}

/* Modal Background */
.modal {
    display: none;
    position: fixed;
    z-index: 1000;
    /* 모달 창을 블러 효과보다 앞에 보이게 */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Modal Content */
.modal-content {
    background-color: #fefefe;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 500px;
    z-index: 1001;
    /* 모달 내용이 모달 배경보다 앞에 보이게 */
    text-align: center;
    border-radius: 15px;
}

.text-gameover {
    text-align: center;
    font-size: 5vmin;
    color: #B1AFFF;
}

.text-final-score {
    text-align: center;
    font-size: 4vmin;
    color: #B1AFFF;
}

/* Blur Background when Modal is Active */
body.modal-open #game-board,
body.modal-open #score,
body.modal-open .upgrade,
body.modal-open .title,
body.modal-open .title-upper {
    filter: blur(5px);
    pointer-events: none;
    /* 모달이 열렸을 때 게임 보드와 점수 요소 클릭 방지 */
}

.form-control {
    border-radius: 0px !important;
    border: 0px;
    border-bottom: 2px solid #B1AFFF;
    height: 30px;
    width: 50%;
}

.form-control:valid {
    border-color: #B1AFFF !important;
}

.btnLightBlue {
    width: 70px;
    height: 30px;
    background: #B1AFFF;
}


@keyframes show {
    from {
        opacity: 0;
        transform: scale(0);
    }

    to {
        opacity: 1;
        transform: scale(1)
    }
}